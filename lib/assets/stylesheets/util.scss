.parent-vertical-align {
  -webkit-transform-style: preserve-3d;
  -moz-transform-style: preserve-3d;
  transform-style: preserve-3d;
}

.vertical-align {
  @media #{$medium-up} {
    position: relative;
    top: 50%;
    transform: translateY(-50%);
  }
}

.overflow {
  max-height: 100%;
  overflow-y: auto;
}

@mixin box-shadow($left, $top, $blur, $spread, $color, $inset: false) {
  @if $inset {
    box-shadow: inset $left $top $blur $spread $color;
    -moz-box-shadow: inset $left $top $blur $spread $color;
    -webkit-box-shadow: inset $left $top $blur $spread $color;
  } @else {
    box-shadow: $left $top $blur $spread $color;
    -moz-box-shadow: $left $top $blur $spread $color;
    -webkit-box-shadow: $left $top $blur $spread $color;
  }
}

@mixin placeholder-color($color) {
  ::-webkit-input-placeholder { /* Chrome/Opera/Safari */
    color: $color;
  }
  ::-moz-placeholder { /* Firefox 19+ */
    color: $color;
  }
  :-ms-input-placeholder { /* IE 10+ */
    color: $color;
  }
  :-moz-placeholder { /* Firefox 18- */
    color: $color;
  }
}

@mixin simple-linear-gradient($color1, $color2, $angle) {
  background: -webkit-linear-gradient($angle, $color1, $color2);
  background: -o-linear-gradient($angle, $color1, $color2);
  background: -moz-linear-gradient($angle, $color1, $color2);
  background: linear-gradient($angle, $color1, $color2);
}

@mixin material-linear-gradient($color-string, $tone1, $tone2, $angle) {
  $color1: material-color($color-string, $tone1);
  $color2: material-color($color-string, $tone2);
  @include simple-linear-gradient($color1, $color2, $angle);
}
